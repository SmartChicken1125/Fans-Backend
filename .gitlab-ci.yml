# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

stages:
  - lint
  - build
  - migrate
  - deploy

cache:
  - key:
      files:
        - yarn.lock
    paths:
      - .yarn/cache/
    policy: pull

install:
  image: node:20.9.0-alpine3.18
  stage: .pre
  cache:
    - key:
        files:
          - yarn.lock
      paths:
        - .yarn/cache/
      when: on_success
      policy: pull-push
  artifacts:
    expire_in: 1h
    paths:
      - .yarn/cache/
  script:
    - YARN_ENABLE_GLOBAL_CACHE=false yarn install --immutable

lint:
  image: node:20.9.0-alpine3.18
  stage: lint
  script:
    - YARN_ENABLE_GLOBAL_CACHE=false yarn install --immutable-cache
    - yarn lint

docker-build:
  image:
    name: gcr.io/kaniko-project/executor:v1.17.0-debug
    entrypoint: [""]
  stage: build
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}${tag}"
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

migrate:
  image: node:20.9.0-alpine3.18
  stage: migrate
  script:
    - YARN_ENABLE_GLOBAL_CACHE=false yarn install --immutable-cache
    - yarn prisma migrate deploy
  only:
    - master

deploy-staging:
  image: alpine/curl:latest
  stage: deploy
  cache: {}
  script:
    - curl --fail --request POST --form token="${TRIGGER_TOKEN}" --form ref=master --form "variables[DEPLOY_IMAGE]=backend" --form "variables[DEPLOY_ENV]=staging" "https://gitlab.harvestangels.co/api/v4/projects/12/trigger/pipeline"
  only:
    - master
